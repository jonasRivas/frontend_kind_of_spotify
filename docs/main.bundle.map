{"version":3,"sources":["webpack:///./src/app/services/artist.service.ts","webpack:///./src/app/services/album.service.ts","webpack:///./src/app/services/global.ts","webpack:///./src/app/models/song.ts","webpack:///./src/app/services/song.service.ts","webpack:///./src/app/services/upload.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/components/album-add.component.ts","webpack:///./src/app/components/album-detail.component.ts","webpack:///./src/app/components/album-edit.component.ts","webpack:///./src/app/components/artist-add.component.ts","webpack:///./src/app/components/artist-detail.component.ts","webpack:///./src/app/components/artist-edit.component.ts","webpack:///./src/app/components/artist-list.component.ts","webpack:///./src/app/components/home.component.ts","webpack:///./src/app/components/song-add.component.ts","webpack:///./src/app/components/song-edit.component.ts","webpack:///./src/app/components/user-edit.component.ts","webpack:///./src/app/models/album.ts","webpack:///./src/app/models/artist.ts","webpack:///./src/app/views/album-add.html","webpack:///./src/app/views/artist-add.html","webpack:///./src/app/views/song-add.html","webpack:///./src/$_gendir async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/player.component.ts","webpack:///./src/app/models/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/views/album-detail.html","webpack:///./src/app/views/artist-detail.html","webpack:///./src/app/views/artist-list.html","webpack:///./src/app/views/home.html","webpack:///./src/app/views/user-edit.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Http, Response, Headers, RequestOptions } from \"@angular/http\";\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/observable';\r\nimport { GLOBAL } from './global';\r\nimport { Artist } from \"../models/artist\";\r\nimport { map } from \"rxjs/operator/map\";\r\n\r\n@Injectable()\r\nexport class ArtistService {\r\n    public url: string;\r\n\r\n    constructor(private _http: Http) {\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    getArtists(token, page){\r\n        let headers = new Headers({\r\n            'Content-Type':'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        let options = new RequestOptions({headers});\r\n        return this._http.get(this.url+'artists/'+page, options).\r\n        map(res => res.json());\r\n    }\r\n \r\n    getArtist(token, id : string){\r\n        let headers = new Headers({\r\n            'Content-Type':'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        let options = new RequestOptions({headers});\r\n        return this._http.get(this.url+'artist/'+id, options).\r\n        map(res => res.json());\r\n    }\r\n\r\n\r\n    addArtist(token, artist : Artist){\r\n        let params = JSON.stringify(artist);\r\n        let headers = new Headers({\r\n            'Content-Type':'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url+'artist', params, {headers})\r\n            .map(res => res.json());\r\n    }\r\n\r\n    editArtist(token, id:string, artist : Artist){\r\n        let params = JSON.stringify(artist);\r\n        let headers = new Headers({\r\n            'Content-Type':'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url+'artist/'+id, params, {headers})\r\n            .map(res => res.json());\r\n    }\r\n\r\n    deleteArtist(token, id: string) {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        let options = new RequestOptions({ headers });\r\n        return this._http.delete(this.url + 'artist/' + id, options).\r\n            map(res => res.json());\r\n    }    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/artist.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, Response, Headers, RequestOptions } from \"@angular/http\";\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/observable';\r\nimport { GLOBAL } from './global';\r\nimport { Album } from \"../models/album\";\r\n\r\n@Injectable()\r\nexport class AlbumService {\r\n    public url: string;\r\n\r\n    constructor(private _http: Http) {\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    getAlbums(token, artistId = null){\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        let options = new RequestOptions({headers:headers});\r\n\r\n        if (artistId == null) {\r\n            return this._http.get(this.url + 'albums/', options)\r\n                .map(res => res.json());\r\n        }else{\r\n            return this._http.get(this.url+'albums/'+artistId, options)\r\n            .map(res => res.json());\r\n        }\r\n    }\r\n\r\n    getAlbum(token, id: string){\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        let options = new RequestOptions({headers:headers});\r\n        return this._http.get(this.url+'album/'+id, options)\r\n        .map(res => res.json());\r\n    }\r\n\r\n    addAlbum(token, album: Album) {\r\n        let params = JSON.stringify(album);\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'album', params, { headers })\r\n            .map(res => res.json());\r\n    }\r\n    editAlbum(token, id:string, album: Album) {\r\n        let params = JSON.stringify(album);\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'album/'+id, params, { headers })\r\n            .map(res => res.json());\r\n    }\r\n\r\n    deleteAlbum(token, id: string) {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        let options = new RequestOptions({ headers: headers });\r\n        return this._http.delete(this.url + 'album/' + id, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/album.service.ts","export var GLOBAL = {\r\n    // url: 'http://localhost:3977/api/',\r\n    url: 'https://kind-of-spotify.herokuapp.com/api/'\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/global.ts","export class Song {\r\n    constructor(\r\n        // public _id: string, //en este caso de omite para hacerlo sencillo\r\n        public number: number,\r\n        public name: string,\r\n        public duration: string,\r\n        public file: string,\r\n        public album: string\r\n    ) { }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/song.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, Response, Headers, RequestOptions } from \"@angular/http\";\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/observable';\r\nimport { GLOBAL } from './global';\r\nimport { Song } from \"../models/song\";\r\n\r\n@Injectable()\r\nexport class SongService {\r\n    public url: string;\r\n\r\n    constructor(private _http: Http) {\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    getSongs(token, albumId = null) {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        if (albumId == null) {\r\n            return this._http.get(this.url + 'songs/', options)\r\n                .map(res => res.json());\r\n        } else {\r\n            return this._http.get(this.url + 'songs/' + albumId, options)\r\n                .map(res => res.json());\r\n        }\r\n    }\r\n\r\n    getSong(token, id: string) {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        let options = new RequestOptions({ headers: headers });\r\n        return this._http.get(this.url + 'song/' + id, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    addSong(token, song: Song) {\r\n        let params = JSON.stringify(song);\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'song', params, { headers })\r\n            .map(res => res.json());\r\n    }\r\n    editSong(token, id: string, song: Song) {\r\n        let params = JSON.stringify(song);\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'song/' + id, params, { headers })\r\n            .map(res => res.json());\r\n    }\r\n\r\n    deleteSong(token, id: string) {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        let options = new RequestOptions({ headers: headers });\r\n        return this._http.delete(this.url + 'song/' + id, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/song.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, Response, Headers, RequestOptions } from \"@angular/http\";\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/observable';\r\nimport { GLOBAL } from './global';\r\nimport { Artist } from \"../models/artist\";\r\nimport { map } from \"rxjs/operator/map\";\r\n\r\n@Injectable()\r\nexport class UploadService {\r\n    public url: string;\r\n\r\n    constructor(private _http: Http) {\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    makeFileRequest(url: string, params: Array<String>, files: Array<File>, token : string, name: string) {\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            var formData: any = new FormData();\r\n            var xhr = new XMLHttpRequest();\r\n\r\n            for (let i = 0; i < files.length; i++) {\r\n                formData.append(name, files[i], files[i].name);\r\n            }\r\n\r\n            xhr.onreadystatechange = function () {\r\n                if (xhr.readyState == 4) {\r\n                    if (xhr.status == 200) {\r\n                        resolve(JSON.parse(xhr.response));\r\n                    } else {\r\n                        reject(xhr.response);\r\n                    }\r\n                }\r\n            }\r\n            xhr.open('POST', url, true);\r\n            xhr.setRequestHeader('Authorization', token);\r\n            xhr.send(formData);\r\n\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/upload.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, Response, Headers } from \"@angular/http\";\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    public url: string;\r\n    public identity;\r\n    public token;\r\n\r\n\r\n    constructor(private _http: Http){\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    singup(user_to_login, gethash = null){\r\n        if (gethash != null) {\r\n            user_to_login.gethash = gethash;\r\n        }\r\n        let json = JSON.stringify(user_to_login);\r\n        let params = json;\r\n        \r\n        let headers = new Headers({'Content-Type': 'application/json'});\r\n        \r\n        return this._http.post(this.url+'login', params, {headers: headers})\r\n        .map(res => res.json());\r\n    }\r\n\r\n    register(user_to_register, gethash = null) {\r\n        let params = JSON.stringify(user_to_register);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n\r\n        return this._http.post(this.url + 'register', params, { headers: headers })\r\n            .map(res => res.json());\r\n    }\r\n\r\n    updateUser(user_to_update) {\r\n        let params = JSON.stringify(user_to_update);\r\n        let headers = new Headers({ \r\n            'Content-Type': 'application/json',\r\n            'Authorization': this.getToken()\r\n        });\r\n        return this._http.put(this.url + 'update-user/'+user_to_update._id, params, { headers: headers })\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getIdentity(){\r\n        let identity = JSON.parse(localStorage.getItem('identity'));\r\n\r\n        if (identity != 'undefined') {\r\n            this.identity = identity;\r\n        }else{\r\n            this.identity = null;\r\n        }\r\n        return this.identity;\r\n    }\r\n\r\n    getToken(){\r\n        let token = localStorage.getItem('token');\r\n\r\n        if (token != 'undefined') {\r\n            this.token = token;\r\n        }else{\r\n            this.token = null;\r\n        }\r\n        return this.token;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/user.service.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { ArtistService } from '../services/artist.service';\r\nimport { AlbumService } from '../services/album.service';\r\nimport { Artist } from '../models/artist';\r\nimport { Album } from '../models/album';\r\n\r\n@Component({\r\n    selector: 'album-add',\r\n    templateUrl: '../views/album-add.html',\r\n    providers: [UserService, ArtistService, AlbumService]\r\n\r\n})\r\n\r\nexport class AlbumAddComponent implements OnInit {\r\n    public titulo: string;\r\n    public artist: Artist;\r\n    public album: Album;\r\n    public identity;\r\n    public token;\r\n    public url: string;\r\n    public alertMessage;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _userService: UserService,\r\n        private _artistService: ArtistService,\r\n        private _albumService: AlbumService\r\n    ) {\r\n        this.titulo = 'Crear Album nuevo';\r\n        this.identity = this._userService.getIdentity();\r\n        this.token = this._userService.getToken();\r\n        this.url = GLOBAL.url;\r\n        this.album = new Album('', '', 2018, '','');\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log('album-add-components se ha cargado');\r\n    }\r\n\r\n    onSubmit() {\r\n        this._route.params.forEach((params: Params)=>{\r\n            let artist_id = params['artist'];\r\n            this.album.artist = artist_id;\r\n            this._albumService.addAlbum(this.token, this.album).subscribe(\r\n                response => {\r\n                    if (!response.album) {\r\n                        this.alertMessage = 'Error en el servidor';\r\n                    } else {\r\n                        this.alertMessage = 'El album se creo correctamente!';\r\n                        this.album = response.album;\r\n                         this._router.navigate(['/editar-album', response.album._id]);\r\n                    }\r\n                },\r\n                error => {\r\n                    var errorMessage = <any>error;\r\n\r\n                    if (errorMessage != null) {\r\n                        var body = JSON.parse(error._body);\r\n                        this.alertMessage = body.message;\r\n                        console.log(error);\r\n                    }\r\n                }  \r\n            );\r\n        });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/album-add.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { AlbumService } from '../services/album.service';\r\nimport { Album } from '../models/album';\r\nimport { SongService } from '../services/song.service';\r\nimport { Song } from '../models/song';\r\n\r\n@Component({\r\n    selector: 'album-detail',\r\n    templateUrl: '../views/album-detail.html',\r\n    providers: [UserService, AlbumService, SongService]\r\n\r\n})\r\n\r\nexport class AlbumDetailComponent implements OnInit {\r\n    public titulo: string;\r\n    public album: Album;\r\n    public songs : Song[];\r\n    public identity;\r\n    public token;\r\n    public url: string;\r\n    public alertMessage;\r\n    public filesToUpload: Array<File>;\r\n    public confirmado;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _userService: UserService,\r\n        private _albumService: AlbumService,\r\n        private _songService: SongService\r\n    ) {\r\n        this.titulo = 'Album detalles';\r\n        this.identity = this._userService.getIdentity();\r\n        this.token = this._userService.getToken();\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log('album-detail-components se ha cargado');\r\n        this.getAlbum();\r\n    }\r\n\r\n\r\n    getAlbum() {\r\n        console.log(\"El metodo ha funcionado\");\r\n        \r\n        this._route.params.forEach((params: Params) => {\r\n            let id = params['id'];\r\n            this._albumService.getAlbum(this.token, id).subscribe(\r\n                response => {\r\n                    \r\n                    if (!response.album) {\r\n                        this._router.navigate(['/']);\r\n                    } else {\r\n\r\n                        this.album = response.album;\r\n                        this._songService.getSongs(this.token, response.album._id).subscribe(\r\n                            response => {\r\n                                if (!response.songs) {\r\n                                    this.alertMessage = 'Este album no tiene canciones';\r\n                                } else {\r\n                                    this.songs = response.songs;\r\n                  \r\n                                }\r\n\r\n                            }, error => {\r\n                                var errorMessage = <any>error;\r\n                                if (errorMessage != null) {\r\n                                    var body = JSON.parse(error._body);\r\n                                    console.log(error);\r\n                                }\r\n                            }\r\n                        )\r\n                    }\r\n                }, error => {\r\n\r\n                    var errorMessage = <any>error;\r\n\r\n                    if (errorMessage != null) {\r\n                        var body = JSON.parse(error._body);\r\n                        // this.alertMessage = body.message;\r\n                        console.log(error);\r\n                    }\r\n\r\n                }\r\n            );\r\n        })\r\n    }\r\n\r\n\r\n    onDeleteConfirm(id) {\r\n        this.confirmado = id;\r\n    }\r\n\r\n    onCancelSong() {\r\n        this.confirmado = null; \r\n    }\r\n\r\n    onDeleteSong(id) {\r\n        this._songService.deleteSong(this.token, id).subscribe(\r\n            response => {\r\n                if (!response.song) {\r\n                    alert('Error en el servidor');\r\n                } else {\r\n                    this.getAlbum();\r\n                }\r\n            }, error => {\r\n\r\n                var errorMessage = <any>error;\r\n\r\n                if (errorMessage != null) {\r\n                    var body = JSON.parse(error._body);\r\n                    // this.alertMessage = body.message;\r\n                    console.log(error);\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    startPlayer(song){\r\n        \r\n        let song_player = JSON.stringify(song);\r\n        let file_path = this.url + 'get-song-file/'+song.file;\r\n        let image_path = this.url + 'get-image-album/' + song.album.image;\r\n        document.getElementById(\"mp3-source\").setAttribute(\"src\", file_path);\r\n        (document.getElementById(\"player\") as any).load();\r\n        (document.getElementById(\"player\") as any).play();\r\n\r\n        document.getElementById('play-song-title').innerHTML = song.name;\r\n        document.getElementById('play-song-artist').innerHTML = song.album.artist.name;\r\n        document.getElementById('play-image-album').setAttribute('src', image_path);\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/album-detail.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { AlbumService } from '../services/album.service';\r\nimport { Artist } from '../models/artist';\r\nimport { UploadService } from '../services/upload.service';\r\nimport { Album } from '../models/album';\r\n\r\n@Component({\r\n    selector: 'album-edit',\r\n    templateUrl: '../views/album-add.html',\r\n    providers: [UserService, AlbumService, UploadService]\r\n\r\n})\r\n\r\nexport class AlbumEditComponent implements OnInit {\r\n    public titulo: string;\r\n    public album: Album;\r\n    public identity;\r\n    public token;\r\n    public url: string;\r\n    public alertMessage;\r\n    public is_edit;\r\n    public filesToUpload: Array<File>;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _userService: UserService,\r\n        private _albumService: AlbumService,\r\n        private _uploadService: UploadService\r\n    ) {\r\n        this.titulo = 'Editar album';\r\n        this.identity = this._userService.getIdentity();\r\n        this.token = this._userService.getToken();\r\n        this.url = GLOBAL.url;\r\n        this.album = new Album('', '', 2018, '', '');\r\n        this.is_edit = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log('album-edit-components se ha cargado');\r\n        this.getAlbum();\r\n    }\r\n\r\n    getAlbum(){\r\n        this._route.params.forEach((params: Params) => {\r\n            let id = params['id'];\r\n\r\n            this._albumService.getAlbum(this.token, id).subscribe(\r\n                response => {\r\n                    if (!response.album) {\r\n                        this._router.navigate(['/']);\r\n                    } else {\r\n                        this.album = response.album;\r\n                    }\r\n                },\r\n                error => {\r\n                    var errorMessage = <any>error;\r\n\r\n                    if (errorMessage != null) {\r\n                        var body = JSON.parse(error._body);\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            )\r\n\r\n        })\r\n    }\r\n\r\n    onSubmit() {\r\n        this._route.params.forEach((params: Params) => {\r\n            let id = params['id'];\r\n\r\n            this._albumService.editAlbum(this.token, id, this.album).subscribe(\r\n                response => {\r\n                    if (!response.album) {\r\n                        this.alertMessage = 'Error en el servidor';\r\n                    } else {\r\n                        this.alertMessage = 'El album se ha actualizado correctamente!';\r\n                        // Subir imagen del album\r\n                     if (!this.filesToUpload) {\r\n                         this._router.navigate(['/artista', response.album.artist]);\r\n                         \r\n                     }else{\r\n\r\n                         this._uploadService.makeFileRequest(this.url + \"upload-image-album/\" + id, [], this.filesToUpload, this.token, 'image')\r\n                         .then(\r\n                             (result) => {\r\n                                 this._router.navigate(['/artista', response.album.artist]);\r\n                                },\r\n                                (error) => {\r\n                                    console.log(error);\r\n                                    \r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                },\r\n                error => {\r\n                    var errorMessage = <any>error;\r\n\r\n                    if (errorMessage != null) {\r\n                        var body = JSON.parse(error._body);\r\n                        this.alertMessage = body.message;\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    fileChangeEvent(fileInput:any){\r\n        this.filesToUpload = <Array<File>>fileInput.target.files;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/album-edit.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { ArtistService } from '../services/artist.service';\r\nimport { Artist } from '../models/artist';\r\n\r\n@Component({\r\n    selector: 'artist-add',\r\n    templateUrl: '../views/artist-add.html',\r\n    providers: [UserService, ArtistService]\r\n\r\n})\r\n\r\nexport class ArtistAddComponent implements OnInit {\r\n    public titulo: string;\r\n    public artist: Artist;\r\n    public identity;\r\n    public token;\r\n    public url: string;\r\n    public alertMessage;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _userService: UserService,\r\n        private _artistService: ArtistService\r\n    ) {\r\n        this.titulo = 'Agregar artista';\r\n        this.identity = this._userService.getIdentity();\r\n        this.token = this._userService.getToken();\r\n        this.url = GLOBAL.url;\r\n        this.artist = new Artist('', '', '');\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log('artist-add-components se ha cargado');\r\n    }\r\n\r\n\r\n    onSubmit() {\r\n        console.log(this.artist);\r\n        this._artistService.addArtist(this.token, this.artist).subscribe(\r\n            response => {\r\n                if (!response.artist) {\r\n                    this.alertMessage = 'Error en el servidor';\r\n                } else {\r\n                    this.alertMessage = 'El artista se creo correctamente!';\r\n                    this.artist = response.artist;\r\n                    this._router.navigate(['/editar-artista', response.artist._id]);\r\n                }\r\n            },\r\n            error => {\r\n                var errorMessage = <any>error;\r\n\r\n                if (errorMessage != null) {\r\n                    var body = JSON.parse(error._body);\r\n                    // this.alertMessage = body.message;\r\n                    console.log(error);\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/artist-add.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { ArtistService } from '../services/artist.service';\r\nimport { Artist } from '../models/artist';\r\nimport { AlbumService } from '../services/album.service';\r\nimport { Album } from '../models/album';\r\n\r\n@Component({\r\n    selector: 'artist-detail',\r\n    templateUrl: '../views/artist-detail.html',\r\n    providers: [UserService, ArtistService, AlbumService]\r\n\r\n})\r\n\r\nexport class ArtistDetailComponent implements OnInit {\r\n    public titulo: string;\r\n    public artist: Artist;\r\n    public albums: Album[];\r\n    public identity;\r\n    public token;\r\n    public url: string;\r\n    public alertMessage;\r\n    public filesToUpload: Array<File>;\r\n    public confirmado;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _userService: UserService,\r\n        private _artistService: ArtistService,\r\n        private _albumService: AlbumService\r\n    ) {\r\n        this.titulo = 'Detalles artista';\r\n        this.identity = this._userService.getIdentity();\r\n        this.token = this._userService.getToken();\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log('artist-detail-components se ha cargado');\r\n        this.getArtist();\r\n    }\r\n\r\n\r\n    getArtist() {\r\n        this._route.params.forEach((params: Params) => {\r\n            let id = params['id'];\r\n            this._artistService.getArtist(this.token, id).subscribe(\r\n                response => {\r\n                    if (!response.artist) {\r\n                        this._router.navigate(['/']);\r\n                    } else {\r\n                        this.artist = response.artist;\r\n\r\n                        this._albumService.getAlbums(this.token, response.artist._id).subscribe(\r\n                            response =>{\r\n                                if (!response.albums) {\r\n                                    this.alertMessage = 'Este artista no tiene albums';\r\n                                }else{\r\n                                    this.albums = response.albums;\r\n                                }\r\n\r\n                            }, error => {\r\n                                var errorMessage = <any>error;\r\n                                if (errorMessage != null) {\r\n                                    var body = JSON.parse(error._body);\r\n                                    console.log(error);\r\n                                }\r\n                            }\r\n                        )\r\n                    }\r\n                }, error => {\r\n\r\n                    var errorMessage = <any>error;\r\n\r\n                    if (errorMessage != null) {\r\n                        var body = JSON.parse(error._body);\r\n                        // this.alertMessage = body.message;\r\n                        console.log(error);\r\n                    }\r\n\r\n                }\r\n            );\r\n        })\r\n    }\r\n\r\n    onDeleteConfirm(id){\r\n        this.confirmado = id;\r\n    }\r\n    \r\n    onCancelAlbum(){\r\n        this.confirmado = null;\r\n    }\r\n\r\n    onDeleteAlbum(id){\r\n        this._albumService.deleteAlbum(this.token, id).subscribe(\r\n            response =>{\r\n                if (!response.album) {\r\n                    alert('Error en el servidor');\r\n                }else{\r\n                    this.getArtist();\r\n                }\r\n            }, error => {\r\n\r\n                var errorMessage = <any>error;\r\n\r\n                if (errorMessage != null) {\r\n                    var body = JSON.parse(error._body);\r\n                    // this.alertMessage = body.message;\r\n                    console.log(error);\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/artist-detail.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { ArtistService } from '../services/artist.service';\r\nimport { UploadService } from '../services/upload.service';\r\nimport { Artist } from '../models/artist';\r\n\r\n@Component({\r\n    selector: 'artist-edit',\r\n    templateUrl: '../views/artist-add.html',\r\n    providers: [UserService, ArtistService, UploadService]\r\n\r\n})\r\n\r\nexport class ArtistEditComponent implements OnInit {\r\n    public titulo: string;\r\n    public artist: Artist;\r\n    public identity;\r\n    public token;\r\n    public url: string;\r\n    public alertMessage;\r\n    public is_edit;\r\n    public filesToUpload: Array<File>;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _userService: UserService,\r\n        private _artistService: ArtistService,\r\n        private _uploadService: UploadService\r\n    ) {\r\n        this.titulo = 'Editar artista';\r\n        this.identity = this._userService.getIdentity();\r\n        this.token = this._userService.getToken();\r\n        this.url = GLOBAL.url;\r\n        this.artist = new Artist('', '', '');\r\n        this.is_edit = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log('artist-edit-components se ha cargado');\r\n        this.getArtist();\r\n    }\r\n\r\n\r\n    getArtist() {\r\n        this._route.params.forEach((params: Params) => {\r\n            let id = params['id'];\r\n            this._artistService.getArtist(this.token, id).subscribe(\r\n                response => {\r\n                    if (!response.artist) {\r\n                        this._router.navigate(['/']);\r\n                    } else {\r\n                        this.artist = response.artist;\r\n                    }\r\n                }, error => {\r\n                    \r\n                        var errorMessage = <any>error;\r\n\r\n                        if (errorMessage != null) {\r\n                            var body = JSON.parse(error._body);\r\n                            // this.alertMessage = body.message;\r\n                            console.log(error);\r\n                        }\r\n                    \r\n                }\r\n            );\r\n        })\r\n    }\r\n\r\n    onSubmit() {\r\n        console.log(this.artist);\r\n        this._route.params.forEach((params: Params) => {\r\n            let id = params['id'];\r\n            this._artistService.editArtist(this.token, id, this.artist).subscribe(\r\n                response => {\r\n                    if (!response.artist) {\r\n                        this.alertMessage = 'Error en el servidor';\r\n                    } else {\r\n                        this.alertMessage = 'El artista ha actualizado correctamente!';\r\n                        // subir imagen del artista\r\n                        if (!this.filesToUpload) {\r\n                            this._router.navigate(['/artista', response.artist._id]);\r\n                        }else{\r\n                            this._uploadService.makeFileRequest(this.url+\"upload-image-artist/\"+id, [], this.filesToUpload, this.token, 'image')\r\n                            .then(\r\n                                (result) => {\r\n                                    this._router.navigate(['/artista', response.artist._id]);\r\n                                },\r\n                                (error) => {\r\n                                    console.log(error);\r\n                                    \r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                },\r\n                error => {\r\n                    var errorMessage = <any>error;\r\n\r\n                    if (errorMessage != null) {\r\n                        var body = JSON.parse(error._body);\r\n                        // this.alertMessage = body.message;\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    fileChangeEvent(fileInput: any){\r\n        this.filesToUpload = <Array<File>>fileInput.target.files;\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/artist-edit.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { ArtistService } from '../services/artist.service';\r\nimport { Artist } from '../models/artist';\r\n\r\n@Component({\r\n    selector: 'artist-list',\r\n    templateUrl: '../views/artist-list.html',\r\n    providers: [UserService, ArtistService]     \r\n\r\n})\r\n\r\nexport class ArtistListComponent implements OnInit {\r\n    public titulo: string;\r\n    public artists: Artist[];\r\n    public identity;\r\n    public token;\r\n    public url: string;\r\n    public prev_page;\r\n    public next_page;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _userService: UserService,\r\n        private _ArtistService: ArtistService\r\n    ){\r\n        this.titulo = 'Artistas';\r\n        this.identity = this._userService.getIdentity();\r\n        this.token = this._userService.getToken();\r\n        this.url = GLOBAL.url;\r\n        this.next_page = 1;\r\n        this.prev_page = 1;\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log('artist-list-components se ha cargado');\r\n        this.getArtists();\r\n    }\r\n\r\n    getArtists(){\r\n        this._route.params.forEach((params: Params)=>{\r\n            let page = +params['page'];\r\n            if (!page) {\r\n                page = 1;\r\n            }else{\r\n                this.next_page = page+1;\r\n                this.prev_page = page-1;\r\n\r\n                if (this.prev_page == 0) {\r\n                    this.prev_page = 1;\r\n                }\r\n            }\r\n            this._ArtistService.getArtists(this.token, page).subscribe(\r\n                response => {\r\n                    if (!response.artists) {\r\n                        this._router.navigate(['/']);\r\n                    } else {\r\n                        this.artists = response.artists;            \r\n                    }\r\n                }, error => {\r\n                    var errorMessage = <any>error;\r\n\r\n                    if (errorMessage != null) {\r\n                        var body = JSON.parse(error._body);\r\n                        console.log(error);\r\n                    }\r\n\r\n                }\r\n            );\r\n            \r\n        })\r\n    }\r\n    public confirmado;\r\n    onDeleteConfirm(id){\r\n        this.confirmado = id;\r\n    }\r\n\r\n    onCancelArtist(){\r\n        this.confirmado = null;\r\n    }  \r\n\r\n    onDeleteArtist(id){\r\n        this._ArtistService.deleteArtist(this.token,id).subscribe(\r\n        response => {\r\n            if (!response.artist) {\r\n                    alert('Error en el servidor');\r\n            } else {\r\n                this.getArtists();\r\n            }\r\n        }, error => {\r\n            var errorMessage = <any>error;\r\n\r\n            if (errorMessage != null) {\r\n                var body = JSON.parse(error._body);\r\n                console.log(error);\r\n            }\r\n\r\n        }\r\n            );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/artist-list.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'home',\r\n    templateUrl: '../views/home.html',\r\n\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n    public titulo: string;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router\r\n    ) {\r\n        this.titulo = 'Bienvenidos';\r\n        \r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log('home.components se ha cargado');\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/home.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { SongService } from '../services/song.service';\r\nimport { Song } from '../models/song';\r\n\r\n@Component({\r\n    selector: 'song-add',\r\n    templateUrl: '../views/song-add.html',\r\n    providers: [UserService, SongService]\r\n\r\n})\r\n\r\nexport class SongAddComponent implements OnInit {\r\n    public titulo: string;\r\n    public song: Song;\r\n    public identity;\r\n    public token;\r\n    public url: string;\r\n    public alertMessage;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _userService: UserService,\r\n        private _songService: SongService,\r\n    ) {\r\n        this.titulo = 'Crear cancion nueva';\r\n        this.identity = this._userService.getIdentity();\r\n        this.token = this._userService.getToken();\r\n        this.url = GLOBAL.url;\r\n        this.song = new Song(1, '', '', '', '');\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log('song-add-components se ha cargado');\r\n    }\r\n\r\n    onSubmit() {\r\n        this._route.params.forEach((params: Params) => {\r\n            let album_id = params['album'];\r\n            this.song.album = album_id;\r\n            this._songService.addSong(this.token, this.song).subscribe(\r\n                response => {\r\n                    if (!response.song) {\r\n                        this.alertMessage = 'Error en el servidor';\r\n                    } else {\r\n                        this.alertMessage = 'La cancion se creo correctamente!';\r\n                        this.song = response.song;\r\n                         this._router.navigate(['/editar-tema', response.song._id]);\r\n                    }\r\n                },\r\n                error => {\r\n                    var errorMessage = <any>error;\r\n\r\n                    if (errorMessage != null) {\r\n                        var body = JSON.parse(error._body);\r\n                        this.alertMessage = body.message;\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/song-add.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { SongService } from '../services/song.service';\r\nimport { UploadService } from '../services/upload.service';\r\nimport { Song } from '../models/song';\r\n\r\n@Component({\r\n    selector: 'song-edit',\r\n    templateUrl: '../views/song-add.html',\r\n    providers: [UserService, SongService, UploadService]\r\n\r\n})\r\n\r\nexport class SongEditComponent implements OnInit {\r\n    public titulo: string;\r\n    public song: Song;\r\n    public identity;\r\n    public token;\r\n    public url: string;\r\n    public alertMessage;\r\n    public is_edit;\r\n    public filesToUpload: Array<File>;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _userService: UserService,\r\n        private _songService: SongService,\r\n        private _uploadService: UploadService\r\n    ) {\r\n        this.titulo = 'Editar cancion';\r\n        this.identity = this._userService.getIdentity();\r\n        this.token = this._userService.getToken();\r\n        this.url = GLOBAL.url;\r\n        this.song = new Song(1, '', '', '', '');\r\n        this.is_edit = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log('song-edit-components se ha cargado');\r\n        this.getSong();\r\n    }\r\n\r\n    getSong() {\r\n        this._route.params.forEach((params: Params) => {\r\n            let id = params['id'];\r\n\r\n            this._songService.getSong(this.token, id).subscribe(\r\n                response => {\r\n                    if (!response.song) {\r\n                        this._router.navigate(['/']);\r\n                    } else {\r\n                        this.song = response.song;\r\n                    }\r\n                },\r\n                error => {\r\n                    var errorMessage = <any>error;\r\n\r\n                    if (errorMessage != null) {\r\n                        var body = JSON.parse(error._body);\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            )\r\n\r\n        })\r\n    }\r\n\r\n    onSubmit() {\r\n        this._route.params.forEach((params: Params) => {\r\n            let id = params['id'];\r\n\r\n            this._songService.editSong(this.token, id, this.song).subscribe(\r\n                response => {\r\n                    if (!response.song) {\r\n                        this.alertMessage = 'Error en el servidor';\r\n                    } else {\r\n                        this.alertMessage = 'La cancion se ha actualizado correctamente!';\r\n                        // Subir imagen del album\r\n                        if (!this.filesToUpload) {\r\n                            this._router.navigate(['/album', response.song.album]);\r\n\r\n                        } else {\r\n\r\n                            this._uploadService.makeFileRequest(this.url + \"upload-file-song/\" + id, [], this.filesToUpload, this.token, 'file')\r\n                                .then(\r\n                                    (result) => {\r\n                                        this._router.navigate(['/album', response.song.album ]);\r\n                                    },\r\n                                    (error) => {\r\n                                        console.log(error);\r\n\r\n                                    }\r\n                                );\r\n                        }\r\n                    }\r\n                },\r\n                error => {\r\n                    var errorMessage = <any>error;\r\n\r\n                    if (errorMessage != null) {\r\n                        var body = JSON.parse(error._body);\r\n                        this.alertMessage = body.message;\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    fileChangeEvent(fileInput: any) {\r\n        this.filesToUpload = <Array<File>>fileInput.target.files;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/song-edit.component.ts","import {Component, OnInit} from '@angular/core';\r\n\r\nimport {UserService} from '../services/user.service';\r\nimport {User} from '../models/user';\r\nimport {GLOBAL} from '../services/global';\r\n\r\n@Component({\r\n    selector: 'user-edit',\r\n    templateUrl: '../views/user-edit.html',\r\n    providers: [UserService]\r\n})\r\n\r\nexport class UserEditComponent implements OnInit {\r\n    public titulo: string;\r\n    public user: User;\r\n    public identity;\r\n    public token;\r\n    public alertMessage;\r\n    public filesToUpload: Array<File>;\r\n    public url: string;\r\n\r\n    constructor(\r\n        private _userService : UserService\r\n        ){\r\n            this.titulo = 'Actualizar mis datos';\r\n            this.identity = this._userService.getIdentity();\r\n            this.token = this._userService.getToken();\r\n            // this.user = new User('', '', '', '', '', 'ROLE_USER', '');\r\n            this.user = this.identity; //carga en el formulario los datos de esta sesion\r\n            this.url = GLOBAL.url;\r\n        }\r\n\r\n    ngOnInit() {\r\n        console.log('user-edit-components se ha cargado');\r\n    }\r\n\r\n\r\n    onSubmit(){\r\n        // console.log(this.user);\r\n        this._userService.updateUser(this.user).subscribe(\r\n            response =>{\r\n                if (!response.user) {\r\n                    this.alertMessage = \"El usuario no se ha actualizado\";\r\n                }else{\r\n                    // this.user = response.user;\r\n                    localStorage.setItem('identity', JSON.stringify(this.user));\r\n                    document.getElementById(\"identity_name\").innerHTML = this.user.name;\r\n                    if (!this.filesToUpload) {\r\n                        //redireccion\r\n                    }else{\r\n                        this.makeFileRequest(this.url + 'upload-image-user/'+this.user._id, [], this.filesToUpload).then((result:any) =>{\r\n                             this.user.image = result.image;\r\n                             localStorage.setItem('identity',JSON.stringify(this.user));\r\n                             let image_path = this.url + \"get-image-user/\"+this.user.image;\r\n                             document.getElementById(\"image-logged\").setAttribute('src', image_path);\r\n                            }\r\n                        ).catch(e=>{\r\n                                console.log(e);\r\n                            });\r\n                    }\r\n                    this.alertMessage = \"El usuario se ha actualizado\";\r\n                }\r\n            },\r\n            error => {\r\n                var errorMessage = <any>error;\r\n\r\n                if (errorMessage != null) {\r\n                    var body = JSON.parse(error._body);\r\n                    this.alertMessage = body.message;\r\n                    console.log(error);\r\n                }\r\n            }\r\n        );        \r\n    }\r\n\r\n\r\n    fileChangeEvent(fileInput: any){\r\n        this.filesToUpload = <Array<File>>fileInput.target.files;\r\n        console.log(this.filesToUpload);\r\n        \r\n    }\r\n\r\n    makeFileRequest(url: string, params : Array<String>, files: Array<File>){\r\n        var token = this.token;\r\n\r\n        return new Promise(function(resolve, reject) {\r\n           var formData: any = new FormData();\r\n           var xhr = new XMLHttpRequest();\r\n           \r\n           for (let i = 0; i < files.length; i++) {\r\n               formData.append('image', files[i], files[i].name);\r\n           }\r\n\r\n           xhr.onreadystatechange = function () {\r\n               if (xhr.readyState == 4) {\r\n                   if (xhr.status == 200) {\r\n                       resolve(JSON.parse(xhr.response));\r\n                    }else{\r\n                        reject(xhr.response);\r\n                    }\r\n                }\r\n            }\r\n            xhr.open('POST',url, true);\r\n            xhr.setRequestHeader('Authorization',token);\r\n            xhr.send(formData);\r\n\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user-edit.component.ts","export class Album {\r\n    constructor(\r\n        // public _id: string, //en este caso de omite para hacerlo sencillo\r\n        public title: string,\r\n        public definition: string,\r\n        public year: number,\r\n        public image: string,\r\n        public artist: string\r\n    ) { }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/album.ts","export class Artist {\r\n    constructor(\r\n        // public _id: string, //en este caso de omite para hacerlo sencillo\r\n        public name: string,\r\n        public definition: string,\r\n        public image: string\r\n    ) { }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/artist.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"identity && identity.role == 'ROLE_ADMIN'\\\">\\r\\n\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <h1>{{titulo}}</h1>\\r\\n            <hr>\\r\\n\\r\\n            <div *ngIf=\\\"alertMessage\\\">\\r\\n                <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\r\\n                    {{alertMessage}}\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"w-100\\\"></div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n\\r\\n            <form #formAlbum=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                <p>\\r\\n                    <label>Titulo</label>\\r\\n                    <input type=\\\"text\\\" #title=\\\"ngModel\\\" name=\\\"title\\\" [(ngModel)]=\\\"album.title\\\" required class=\\\"form-control\\\" />\\r\\n                    <span *ngIf=\\\"!title.valid && title.touched\\\">\\r\\n                        El titulo es Obligatorio\\r\\n                    </span>\\r\\n                </p>\\r\\n                <p>\\r\\n                    <label>Descripcion</label>\\r\\n                    <textarea type=\\\"definition\\\" #definition=\\\"ngModel\\\" name=\\\"definition\\\" [(ngModel)]=\\\"album.definition\\\" required class=\\\"form-control\\\"></textarea>\\r\\n                    <span *ngIf=\\\"!definition.valid && definition.touched\\\">\\r\\n                        La descripcion es obligatoria\\r\\n                    </span>\\r\\n                </p>\\r\\n                <p>\\r\\n                    <label>Año</label>\\r\\n                    <input type=\\\"text\\\" #year=\\\"ngModel\\\" name=\\\"year\\\" [(ngModel)]=\\\"album.year\\\" required class=\\\"form-control\\\" />\\r\\n                    <span *ngIf=\\\"!year.valid && year.touched\\\">\\r\\n                        El año es Obligatorio\\r\\n                    </span>\\r\\n                </p>\\r\\n                <div *ngIf=\\\"is_edit\\\">\\r\\n                    <div class=\\\"album_image_for_edit\\\" *ngIf=\\\"album.image && album.image != 'null'\\\">\\r\\n                        <img src=\\\"{{url + 'get-image-album/'+ album.image}}\\\" alt=\\\"\\\" />\\r\\n                    </div>\\r\\n                    <p>\\r\\n                        <label>Sube la imagen del album</label>\\r\\n                        <input type=\\\"file\\\" placeholder=\\\"Subir imagen..\\\" (change)=\\\"fileChangeEvent($event)\\\" />\\r\\n                    </p>\\r\\n                </div>\\r\\n                <input type=\\\"submit\\\" value=\\\"{{titulo}}\\\" [disabled]=\\\"!formAlbum.form.valid\\\" class=\\\"btn btn-success\\\" />\\r\\n\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"!identity || identity.role != 'ROLE_ADMIN'\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <h1>Error</h1>\\r\\n            <p>No tienes acceso a esta parte de la aplicacion</p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/album-add.html\n// module id = 388\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\r\\n<div class=\\\"row justify-content-center\\\" *ngIf = \\\"identity && identity.role == 'ROLE_ADMIN'\\\">\\r\\n\\r\\n    <div class=\\\"col-6\\\">\\r\\n    <h1>{{titulo}}</h1>\\r\\n    <hr>\\r\\n    \\r\\n    <div *ngIf=\\\"alertMessage\\\">\\r\\n        <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\r\\n            {{alertMessage}}\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    <div class=\\\"w-100\\\"></div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n\\r\\n        <form #formArtist= \\\"ngForm\\\" (ngSubmit)= \\\"onSubmit()\\\">\\r\\n            <p>\\r\\n                <label>Nombre</label>\\r\\n                <input type=\\\"text\\\" #name=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]= \\\"artist.name\\\" required class=\\\"form-control\\\" />\\r\\n                <span *ngIf= \\\"!name.valid && name.touched\\\">\\r\\n                    El nombre es Obligatorio\\r\\n                </span> \\r\\n            </p>\\r\\n            <p>\\r\\n                <label>Descripcion</label>\\r\\n                <textarea type=\\\"text\\\" #definition=\\\"ngModel\\\" name=\\\"definition\\\" [(ngModel)]= \\\"artist.definition\\\" required class=\\\"form-control\\\"></textarea>\\r\\n                <span *ngIf= \\\"!definition.valid && definition.touched\\\">\\r\\n                    La descripcion es obligatoria\\r\\n                </span> \\r\\n            </p>\\r\\n\\r\\n            <div *ngIf = \\\"is_edit\\\">\\r\\n                <div class=\\\"artist_image_for_edit\\\" *ngIf = \\\"artist.image && artist.image != 'null'\\\">\\r\\n                    <img src=\\\"{{url + 'get-image-artist/'+ artist.image}}\\\" alt=\\\"\\\" />\\r\\n                </div>\\r\\n                <p>\\r\\n                    <label>Sube la imagen del artista</label>\\r\\n                    <input type=\\\"file\\\" placeholder=\\\"Subir imagen..\\\" (change)=\\\"fileChangeEvent($event)\\\" />\\r\\n                </p>\\r\\n            </div>\\r\\n\\r\\n            <input type=\\\"submit\\\" value = \\\"{{titulo}}\\\" [disabled]=\\\"!formArtist.form.valid\\\" class=\\\"btn btn-success\\\" />\\r\\n            \\r\\n        </form> \\r\\n    </div>\\r\\n</div>\\r\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"!identity || identity.role != 'ROLE_ADMIN'\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <h1>Error</h1>\\r\\n            <p>No tienes acceso a esta parte de la aplicacion</p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/artist-add.html\n// module id = 389\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"identity && identity.role == 'ROLE_ADMIN'\\\">\\r\\n\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <h1>{{titulo}}</h1>\\r\\n            <hr>\\r\\n\\r\\n            <div *ngIf=\\\"alertMessage\\\">\\r\\n                <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\r\\n                    {{alertMessage}}\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"w-100\\\"></div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n\\r\\n            <form #formSong=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                <p>\\r\\n                    <label>Numero</label>\\r\\n                    <input type=\\\"text\\\" #number=\\\"ngModel\\\" name=\\\"number\\\" [(ngModel)]=\\\"song.number\\\" required class=\\\"form-control\\\" />\\r\\n                    <span *ngIf=\\\"!number.valid && number.touched\\\">\\r\\n                        El numero de la cancion es Obligatorio\\r\\n                    </span>\\r\\n                </p>\\r\\n                <p>\\r\\n                    <label>Titulo</label>\\r\\n                    <input type=\\\"text\\\" #name=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"song.name\\\" required class=\\\"form-control\\\" />\\r\\n                    <span *ngIf=\\\"!name.valid && name.touched\\\">\\r\\n                        El titulo es Obligatorio\\r\\n                    </span>\\r\\n                </p>\\r\\n                <p>\\r\\n                    <label>Duracion</label>\\r\\n                    <input type=\\\"text\\\" #duration=\\\"ngModel\\\" name=\\\"duration\\\" [(ngModel)]=\\\"song.duration\\\" required class=\\\"form-control\\\">\\r\\n                    <span *ngIf=\\\"!duration.valid && duration.touched\\\">\\r\\n                        La duracion es obligatoria\\r\\n                    </span>\\r\\n                </p>\\r\\n                <div *ngIf=\\\"is_edit\\\">\\r\\n                    <div class=\\\"song_file_for_edit\\\" *ngIf=\\\"song.file && song.file != 'null'\\\">\\r\\n                        <audio controls>\\r\\n                            <source src=\\\"{{url + 'get-song-file/' + song.file}}\\\" type=\\\"audio/mpeg\\\" />\\r\\n                                El navegador web no soporta reproduccion de audio\\r\\n                        </audio>\\r\\n                    </div>\\r\\n                    <p>\\r\\n                        <label>Sube el fichero de audio</label>\\r\\n                        <input type=\\\"file\\\" placeholder=\\\"Subir fichero..\\\" (change)=\\\"fileChangeEvent($event)\\\" />\\r\\n                    </p>\\r\\n                </div>\\r\\n                <input type=\\\"submit\\\" value=\\\"{{titulo}}\\\" [disabled]=\\\"!formSong.form.valid\\\" class=\\\"btn btn-success\\\" />\\r\\n\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"!identity || identity.role != 'ROLE_ADMIN'\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <h1>Error</h1>\\r\\n            <p>No tienes acceso a esta parte de la aplicacion</p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/song-add.html\n// module id = 390\n// module chunks = 1","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 412;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir async\n// module id = 412\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/app.module';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from './services/user.service';\r\n\r\nimport { User } from './models/user';\r\nimport { GLOBAL } from './services/global';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  providers: [UserService]\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n  public title = 'MUSIFY!';\r\n  public user: User;\r\n  public user_register: User;\r\n  public identity;\r\n  public token;\r\n  public errorMessage;\r\n  public alertRegister;\r\n  public url : string;\r\n\r\n  constructor(\r\n    private _userService:UserService\r\n  ){\r\n    this.user = new User('','','','','','ROLE_USER','');\r\n    this.user_register = new User('','','','','','ROLE_USER','');\r\n    this.url = GLOBAL.url;\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.identity = this._userService.getIdentity();\r\n    this.token = this._userService.getToken();\r\n    \r\n    console.log(this.identity);\r\n    console.log(this.token);\r\n    \r\n  }\r\n\r\n  public onSubmit() {\r\n    console.log(this.user);\r\n\r\n    // Conseguir los datos del usuario identificado\r\n    this._userService.singup(this.user).subscribe(\r\n      response => {\r\n        let identity = response.user;\r\n        this.identity = identity;\r\n        if (!this.identity._id) {\r\n          alert(\"El usuario no esta correctamente identificado\");\r\n        }else{\r\n          // crear elemento en el localstorage para tener al usuario sesión\r\n          localStorage.setItem('identity', JSON.stringify(identity));\r\n          \r\n          // Conseguir el token para enviarselo a cada petición http\r\n          this._userService.singup(this.user, 'true').subscribe(\r\n            response => {\r\n              let token = response.token;\r\n              this.token = token;\r\n              if (this.token.length <= 0) {\r\n                alert(\"El Token no se ha generado correctamente\");\r\n              } else {\r\n                // crear elemento en el localstorage para tener el token disponible \r\n                localStorage.setItem('token', token);\r\n                this.user = new User('', '', '', '', '', 'ROLE_USER', '');\r\n              }\r\n            },\r\n            error => {\r\n              var errorMessage = <any>error;\r\n\r\n              if (errorMessage != null) {\r\n                var body = JSON.parse(error._body);\r\n                this.errorMessage = body.message;\r\n                console.log(error);\r\n              }\r\n            }\r\n          );  \r\n        }\r\n      },\r\n      error => {\r\n         var errorMessage = <any>error;\r\n        \r\n        if (errorMessage != null) {\r\n          var body = JSON.parse(error._body);\r\n          this.errorMessage = body.message;\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  logout(){\r\n    localStorage.removeItem('identity');\r\n    localStorage.removeItem('token');\r\n    localStorage.clear();\r\n    this.identity = null;\r\n    this.token = null;\r\n    // this._router.navigate(['/']);\r\n  }\r\n\r\n  onSubmitRegister(){\r\n    console.log(this.user_register);\r\n    this._userService.register(this.user_register).subscribe(\r\n      response =>{\r\n        let user = response.user;\r\n        this.user_register = user;\r\n\r\n        if (!user._id) {\r\n          this.alertRegister = 'Error al registrarse';\r\n        }else{\r\n          this.alertRegister = 'El registro se ha realizado correctamente con ' + this.user_register.email;\r\n          this.user_register = new User('', '', '', '', '', 'ROLE_USER', '');\r\n        }\r\n      },\r\n      error => {\r\n        var errorMessage = <any>error;\r\n\r\n        if (errorMessage != null) {\r\n          var body = JSON.parse(error._body);\r\n          this.alertRegister = body.message;\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { routing, appRoutingProviders } from './app.routing';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home.component';\r\nimport { UserEditComponent } from './components/user-edit.component';\r\nimport { ArtistListComponent } from './components/artist-list.component';\r\nimport { ArtistAddComponent } from './components/artist-add.component';\r\nimport { ArtistEditComponent } from './components/artist-edit.component';\r\nimport { ArtistDetailComponent } from './components/artist-detail.component';\r\nimport { AlbumAddComponent } from './components/album-add.component';\r\nimport { AlbumEditComponent } from './components/album-edit.component';\r\nimport { AlbumDetailComponent } from './components/album-detail.component';\r\nimport { SongAddComponent } from './components/song-add.component';\r\nimport { SongEditComponent } from './components/song-edit.component';\r\nimport { PlayerComponent } from './components/player.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent, \r\n    UserEditComponent,\r\n    ArtistListComponent,\r\n    ArtistAddComponent,\r\n    ArtistEditComponent,\r\n    ArtistDetailComponent,\r\n    AlbumAddComponent,\r\n    AlbumEditComponent,\r\n    AlbumDetailComponent,\r\n    SongAddComponent,\r\n    SongEditComponent,\r\n    PlayerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    routing\r\n  ],\r\n  providers: [appRoutingProviders],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\n// import homr page\r\nimport { HomeComponent } from './components/home.component';\r\n// import user\r\nimport { UserEditComponent } from './components/user-edit.component';\r\n// import artist\r\nimport { ArtistListComponent } from './components/artist-list.component';\r\n// add artist\r\nimport { ArtistAddComponent } from './components/artist-add.component';\r\n//edit artist\r\nimport { ArtistEditComponent } from './components/artist-edit.component';\r\nimport { ArtistDetailComponent } from './components/artist-detail.component';\r\nimport { AlbumAddComponent } from './components/album-add.component';\r\nimport { AlbumEditComponent } from './components/album-edit.component';\r\nimport { AlbumDetailComponent } from './components/album-detail.component';\r\nimport { SongAddComponent } from './components/song-add.component';\r\nimport { SongEditComponent } from './components/song-edit.component';\r\n\r\n\r\n\r\n\r\nconst appRoutes: Routes = [\r\n    // { \r\n    //     path: '',\r\n    //     redirectTo: 'artist/:page',\r\n    //     pathMatch: 'full'\r\n    //  },\r\n    { path: '', component: HomeComponent },\r\n    { path: 'artistas/:page', component: ArtistListComponent },\r\n    { path: 'crear-artista', component: ArtistAddComponent },\r\n    { path: 'editar-artista/:id', component: ArtistEditComponent },\r\n    { path: 'artista/:id', component: ArtistDetailComponent },\r\n    { path: 'mis-datos', component: UserEditComponent },\r\n    { path: 'crear-album/:artist', component: AlbumAddComponent },\r\n    { path: 'editar-album/:id', component: AlbumEditComponent },\r\n    { path: 'album/:id', component: AlbumDetailComponent },\r\n    { path: 'crear-tema/:album', component: SongAddComponent },\r\n    { path: 'editar-tema/:id', component: SongEditComponent },\r\n    { path: '**', component: ArtistListComponent }\r\n];\r\n\r\nexport const appRoutingProviders: any[] = [];\r\nexport const routing : ModuleWithProviders = RouterModule.forRoot(appRoutes);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routing.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Song } from '../models/song';\r\nimport { GLOBAL } from '../services/global';\r\n\r\n\r\n@Component({\r\n    selector: 'player',\r\n    template: `\r\n    <div class = \"album-image\">\r\n        <span *ngIf = \"song.album\">\r\n            <img id = \"play-image-album\" src = \"{{url + 'get-image-album/' + song.album.image}}\" />\r\n        </span>\r\n        <span *ngIf = \"!song.album\">\r\n            <img id = \"play-image-album\" src = \"assets/images/default.png\" />\r\n        </span>\r\n    </div>\r\n    <div class = \"audio-file\">\r\n        <p>Reproduciendo</p>\r\n        <span id=\"play-song-title\">\r\n        {{song.name}}\r\n        </span>\r\n        -\r\n        <span id=\"play-song-artist\">\r\n            <span *ngIf= \"song.album.artist\">\r\n                {{song.album.artist.name}}\r\n            </span>\r\n        </span>\r\n        <audio controls id  = \"player\">\r\n            <source id= \"mp3-source\" src=\"{{url + 'get-song-file/'+song.file}}\" type = \"audio/mpeg\">\r\n            Tu navegador no es compatible\r\n        </audio>\r\n    </div>\r\n\r\n    `\r\n\r\n})\r\n\r\nexport class PlayerComponent implements OnInit {\r\n    public url: string;\r\n    public song;\r\n\r\n    constructor() {\r\n        this.url = GLOBAL.url;\r\n    }\r\n    ngOnInit() {\r\n        console.log('player cargado');\r\n        var song = JSON.parse(localStorage.getItem('sound_song'));\r\n        if (song) {\r\n            this.song = song;\r\n        }else{\r\n            this.song = new Song(1, \"\", \"\", \"\", \"\");\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/player.component.ts","export class User {\r\n    constructor(\r\n        public _id: string,\r\n        public name: string,\r\n        public surname: string,\r\n        public email: string,\r\n        public password: string,\r\n        public role: string,\r\n        public image: string\r\n    ){}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/user.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"<div class=\\\"row container-fluid\\\">\\r\\n  <div *ngIf=\\\"identity\\\" class=\\\"navigation col-lg-1\\\">\\r\\n    <h1 class=\\\"head-title\\\">\\r\\n      <a [routerLink]=\\\"['/']\\\">\\r\\n        {{title}}\\r\\n      </a>\\r\\n    </h1>\\r\\n    <nav id=\\\"navigation\\\">\\r\\n      <a href=\\\"#\\\" >\\r\\n        <span class=\\\"glyphicon glyphicon-search\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        Buscar\\r\\n      </a>\\r\\n      <a [routerLink]=\\\"['/artistas',1]\\\" [routerLinkActive] = \\\"['actived']\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-star\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        Artistas\\r\\n      </a>\\r\\n      <a href=\\\"#\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-book\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        Albums\\r\\n      </a>\\r\\n    </nav>\\r\\n    <nav id=\\\"user_logged\\\">\\r\\n      <div class=\\\"user-image\\\">\\r\\n        <img id=\\\"image-logged\\\" src=\\\"{{url + 'get-image-user/' + identity.image}}\\\">\\r\\n      </div>\\r\\n\\r\\n      <span id=\\\"identity_name\\\">{{identity.name}}</span>\\r\\n      <a [routerLink]=\\\"['/mis-datos']\\\"  [routerLinkActive] = \\\"['actived']\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-cog\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        Mis datos\\r\\n      </a>\\r\\n      <a (click)=\\\"logout()\\\" class=\\\"btn-logout\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-cog\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        Salir\\r\\n      </a>\\r\\n    </nav>\\r\\n  </div>\\r\\n\\r\\n  <!-- <div [class.hidden]=\\\"!identity\\\" class=\\\"central col-lg-10\\\"> -->\\r\\n  <div *ngIf=\\\"identity\\\" class=\\\"central col-lg-11\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n    <player class=\\\"player\\\"></player>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"!identity\\\" class=\\\"col-lg-11\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <h1>Identificate</h1>\\r\\n        <div *ngIf=\\\"errorMessage\\\">\\r\\n          <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\r\\n            <strong>Error: </strong> {{errorMessage}}\\r\\n          </div>\\r\\n        </div>\\r\\n        <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"col-md-6\\\">\\r\\n          <p>\\r\\n            <label>Correo Electrónico:</label>\\r\\n            <input type=\\\"email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" class=\\\"form-control\\\" required/>\\r\\n            <span *ngIf=\\\"!email.valid && email.touched\\\">\\r\\n              El email es requerido\\r\\n            </span>\\r\\n          </p>\\r\\n          <p>\\r\\n            <label>Contraseña:</label>\\r\\n            <input type=\\\"password\\\" #password=\\\"ngModel\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" class=\\\"form-control\\\" required/>\\r\\n          </p>\\r\\n          <input type=\\\"submit\\\" value=\\\"Entrar\\\" class=\\\"btn btn-primary\\\">\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <h1>Registrate</h1>\\r\\n        <div *ngIf=\\\"alertRegister\\\">\\r\\n          <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\r\\n            {{alertRegister}}\\r\\n          </div>\\r\\n        </div>\\r\\n        <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitRegister()\\\" class=\\\"col-md-10\\\">\\r\\n          <p>\\r\\n            <label>Nombre:</label>\\r\\n            <input type=\\\"text\\\" #name=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"user_register.name\\\" class=\\\"form-control\\\" required/>\\r\\n            <span *ngIf=\\\"!name.valid && name.touched\\\">\\r\\n              El nombre es requerido\\r\\n            </span>\\r\\n          </p>\\r\\n          <p>\\r\\n            <label>Apellidos:</label>\\r\\n            <input type=\\\"text\\\" #surname=\\\"ngModel\\\" name=\\\"surname\\\" [(ngModel)]=\\\"user_register.surname\\\" class=\\\"form-control\\\" required/>\\r\\n            <span *ngIf=\\\"!surname.valid && surname.touched\\\">\\r\\n              El Apellido es requerido\\r\\n            </span>\\r\\n          </p>\\r\\n          <p>\\r\\n            <label>Correo Electrónico:</label>\\r\\n            <input type=\\\"email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" [(ngModel)]=\\\"user_register.email\\\" class=\\\"form-control\\\" required/>\\r\\n            <span *ngIf=\\\"!email.valid && email.touched\\\">\\r\\n              El email es requerido\\r\\n            </span>\\r\\n          </p>\\r\\n          <p>\\r\\n            <label>Contraseña:</label>\\r\\n            <input type=\\\"password\\\" #password=\\\"ngModel\\\" name=\\\"password\\\" [(ngModel)]=\\\"user_register.password\\\" class=\\\"form-control\\\" required/>\\r\\n            <span *ngIf=\\\"!password.valid && password.touched\\\">\\r\\n              La contraseña es requerido\\r\\n            </span>\\r\\n          </p>\\r\\n          <input type=\\\"submit\\\" value=\\\"Registrarse\\\" class=\\\"btn btn-primary\\\">\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 690\n// module chunks = 1","module.exports = \"<div *ngIf=\\\"album\\\" class=\\\"artist-box\\\">\\r\\n\\r\\n    <div id=\\\"album-head-card\\\">\\r\\n        <div class=\\\"image\\\">\\r\\n            <img src=\\\"{{url + 'get-image-album/' + album.image}}\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"data\\\">\\r\\n            <h1>{{album.name}}</h1>\\r\\n            <h1>\\r\\n                <strong>{{album.artist.name}}</strong>\\r\\n            </h1>\\r\\n            <p>{{album.year}}</p>\\r\\n            <p>{{album.definition}}</p>\\r\\n\\r\\n            <a [routerLink]=\\\"['/crear-tema', album._id]\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"identity.role == 'ROLE_ADMIN'\\\">\\r\\n                Añadir Cancion\\r\\n            </a>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n    <div id=\\\"gallery-songs\\\" *ngIf=\\\"songs\\\">\\r\\n        <!-- Listar los songs -->\\r\\n        <ul class=\\\"songs-list row\\\">\\r\\n            <li *ngFor=\\\"let song of songs\\\" class=\\\"col-12 song-item\\\">\\r\\n                <div class=\\\"title\\\">\\r\\n                    <a class=\\\"btn btn-play btn-success\\\" (click)=startPlayer(song)>\\r\\n                        <!-- <span> -->\\r\\n                            <img class = \\\"btn-icon\\\" src=\\\"../../assets/images/play.png\\\" alt=\\\"\\\">\\r\\n                        <!-- </span> -->\\r\\n                    </a>\\r\\n                    {{song.number + '. ' + song.name + ' - ' + song.duration}}\\r\\n\\r\\n                    <div class=\\\"buttons\\\" *ngIf=\\\"identity && identity.role == 'ROLE_ADMIN'\\\">\\r\\n                        <a [routerLink]=\\\"['/editar-tema', song._id]\\\" class=\\\"btn btn-warning\\\">Editar</a>\\r\\n                        <a (click)=\\\"onDeleteConfirm(song._id)\\\" class=\\\"btn btn-danger\\\">Borrar</a>\\r\\n                    </div>\\r\\n                    <div class=\\\"seguro seguro-song\\\" *ngIf=\\\"confirmado == song._id\\\">\\r\\n                        <a (click)=\\\"onDeleteSong(song._id)\\\" class=\\\"btn btn-warning\\\">Eliminar</a>\\r\\n                        <a (click)=\\\"onCancelSong()\\\" class=\\\"btn btn-danger\\\">Cancelar</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/album-detail.html\n// module id = 691\n// module chunks = 1","module.exports = \"<div *ngIf=\\\"artist\\\" class=\\\"artist-box\\\">\\r\\n\\r\\n    <div id=\\\"artist-head-card\\\">\\r\\n        <div class=\\\"image\\\">\\r\\n            <img src=\\\"{{url + 'get-image-artist/' + artist.image}}\\\" *ngIf=\\\"artist.image && artist.image !== 'null'\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"data\\\">\\r\\n            <h1>{{artist.name}}</h1>\\r\\n            <p class=\\\"definition\\\">{{artist.definition}}</p>\\r\\n\\r\\n            <a *ngIf=\\\"identity.role =='ROLE_ADMIN'\\\" [routerLink]=\\\"['/crear-album', artist._id]\\\" class=\\\"btn btn-dark\\\">Añadir Album</a>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n    <div id=\\\"gallery-albums\\\" *ngIf=\\\"albums\\\">\\r\\n        <!-- Listar los Albums -->\\r\\n        <ul class=\\\"album-list row\\\">\\r\\n            <li *ngFor=\\\"let album of albums\\\" class=\\\"col-lg-3 mt-5 mb-5 album-item\\\">\\r\\n                <div class=\\\"album-image\\\">\\r\\n                    <img src=\\\"{{url + 'get-image-album/' + album.image}}\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"album-name\\\">\\r\\n                    <p>\\r\\n                        <a [routerLink]=\\\"['/album', album._id]\\\">\\r\\n                            {{album.title}}\\r\\n                        </a>\\r\\n                    </p>\\r\\n                    <p>\\r\\n                        <a [routerLink]=\\\"['/artista', album.artist._id]\\\">\\r\\n                            {{album.artist.name}}\\r\\n                        </a>\\r\\n                    </p>\\r\\n                    <div class=\\\"buttons\\\">\\r\\n                        <a [routerLink]=\\\"['/editar-album', album._id]\\\" class=\\\"btn btn-sm btn-warning\\\">\\r\\n                            Editar</a>\\r\\n                        <a (click)=\\\"onDeleteConfirm(album._id)\\\" class=\\\"btn btn-sm btn-danger\\\">\\r\\n                            Borrar</a>\\r\\n                    </div>\\r\\n                    <div class=\\\"seguro\\\" *ngIf=\\\"confirmado == album._id\\\">\\r\\n                        <a (click)=\\\"onDeleteAlbum(album._id)\\\" class=\\\"btn btn-sm btn-danger\\\">\\r\\n                            Eliminar</a>\\r\\n                        <a (click)=\\\"onCancelAlbum()\\\" class=\\\"btn btn-sm btn-success\\\">\\r\\n                            Cancelar</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/artist-detail.html\n// module id = 692\n// module chunks = 1","module.exports = \"<div *ngIf=\\\"identity\\\" class=\\\" container row\\\">\\r\\n    <div *ngIf=\\\"identity\\\" class=\\\"head-page col-12\\\">\\r\\n\\r\\n            <h1>{{titulo}}</h1> \\r\\n            <a [routerLink]=\\\"['/crear-artista']\\\" *ngIf=\\\"identity && identity.role == 'ROLE_ADMIN'\\\" class=\\\"btn btn-light\\\">\\r\\n                Añadir Artista\\r\\n            </a>\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <ul class=\\\"pagination pull-right\\\">\\r\\n            <li>\\r\\n                <a [routerLink]=\\\"['/artistas', prev_page]\\\" class=\\\"btn btn-sm btn-outline-dark\\\">&laquo;</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                <a [routerLink]=\\\"['/artistas', next_page]\\\" class=\\\"btn btn-sm btn-outline-dark\\\">&raquo;</a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div class=\\\"clearflix\\\"></div>\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <ul class=\\\"artist-list row\\\" *ngIf=\\\"identity\\\">\\r\\n            <li *ngFor=\\\"let artist of artists\\\" class=\\\"artist-item col-3\\\">\\r\\n                <div class=\\\"artist-image\\\">\\r\\n                    <img src=\\\"{{url + 'get-image-artist/' + artist.image}}\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"artist-name\\\">\\r\\n                    <a [routerLink]=\\\"['/artista', artist._id]\\\">\\r\\n                        {{artist.name}}\\r\\n                    </a>\\r\\n                     <div class=\\\"buttons\\\">\\r\\n                       <a [routerLink]=\\\"['/editar-artista', artist._id]\\\" class = \\\"btn btn-sm btn-warning\\\">\\r\\n                        Editar</a>\\r\\n                       <a (click) = \\\"onDeleteConfirm(artist._id)\\\" class = \\\"btn btn-sm btn-danger\\\">\\r\\n                        Borrar</a>\\r\\n                     </div>\\r\\n                     <div class=\\\"seguro\\\" *ngIf = \\\"confirmado == artist._id\\\">\\r\\n                        <a (click)=\\\"onDeleteArtist(artist._id)\\\" class=\\\"btn btn-sm btn-danger\\\">\\r\\n                            Eliminar</a>\\r\\n                        <a (click)=\\\"onCancelArtist()\\\" class=\\\"btn btn-sm btn-success\\\">\\r\\n                            Cancelar</a>\\r\\n                     </div>\\r\\n                </div>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/artist-list.html\n// module id = 693\n// module chunks = 1","module.exports = \"<div class=\\\"row-9 d-flex justify-content-center\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n        <h1 class=\\\"display-4\\\">Bienvenido a MUSIFY</h1>\\r\\n        <p class=\\\"lead\\\">Escucha a tus artistas favoritos y empieza a a descubrir hits :D</p>\\r\\n        <hr class=\\\"my-4\\\">\\r\\n        <p class=\\\"lead\\\">\\r\\n            <a class=\\\"btn btn-primary btn-lg\\\" [routerLink]=\\\"['/artistas',1]\\\" role=\\\"button\\\">Ver Artistas</a>\\r\\n        </p>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/home.html\n// module id = 694\n// module chunks = 1","module.exports = \"<div class=\\\"col-lg-6\\\">\\r\\n    <h1>{{titulo}}</h1>\\r\\n    <div *ngIf=\\\"alertMessage\\\">\\r\\n        <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\r\\n            {{alertMessage}}\\r\\n        </div>\\r\\n    </div>\\r\\n    <form #userUpdateForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"col-md-10\\\">\\r\\n        <p>\\r\\n            <label>Nombre:</label>\\r\\n            <input type=\\\"text\\\" #name=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"user.name\\\" class=\\\"form-control\\\" required/>\\r\\n            <span *ngIf=\\\"!name.valid && name.touched\\\">\\r\\n                El nombre es requerido\\r\\n            </span>\\r\\n        </p>\\r\\n        <p>\\r\\n            <label>Apellidos:</label>\\r\\n            <input type=\\\"text\\\" #surname=\\\"ngModel\\\" name=\\\"surname\\\" [(ngModel)]=\\\"user.surname\\\" class=\\\"form-control\\\" required/>\\r\\n            <span *ngIf=\\\"!surname.valid && surname.touched\\\">\\r\\n                El Apellido es requerido\\r\\n            </span>\\r\\n        </p>\\r\\n        <p>\\r\\n            <label>Correo Electrónico:</label>\\r\\n            <input type=\\\"email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" class=\\\"form-control\\\" required/>\\r\\n            <span *ngIf=\\\"!email.valid && email.touched\\\">\\r\\n                El email es requerido\\r\\n            </span>\\r\\n        </p>\\r\\n        <div class=\\\"image_for_edit\\\">\\r\\n            <img src=\\\"{{url + 'get-image-user/' + user.image}}\\\" style=\\\"width: 50px;\\\">\\r\\n        </div>\\r\\n        <div class=\\\"image_for_edit\\\" *ngIf = \\\"user.image && user.image != 'null'\\\">\\r\\n            <img src=\\\"\\\" />\\r\\n        </div>\\r\\n        <p>\\r\\n            <label>Sube tu foto:</label>\\r\\n            <input type=\\\"file\\\" placeholder=\\\"Subir imagen...\\\" (change) = \\\"fileChangeEvent($event)\\\" />\\r\\n        </p>\\r\\n        <input type=\\\"submit\\\" value=\\\"Actualizar mis datos\\\" class=\\\"btn btn-primary\\\">\\r\\n    </form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/user-edit.html\n// module id = 695\n// module chunks = 1"],"sourceRoot":""}